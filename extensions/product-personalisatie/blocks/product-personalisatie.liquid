<div class="gifting-app-container" id="gifting-app-container-{{ block.id }}">
  <div class="gifting-checkbox-container">
    <input
      type="checkbox"
      id="personalization-checkbox-{{ block.id }}"
      class="gifting-checkbox-input"
    >
    <label for="personalization-checkbox-{{ block.id }}" class="gifting-checkbox-label">
      <span class="gifting-checkbox-box">
        <svg class="gifting-checkbox-icon" viewBox="0 0 16 16">
          <polyline points="3.5 8 6.5 11 12.5 5"></polyline>
        </svg>
      </span>
      {{ block.settings.checkbox_label | default: "Ja, ik wil een persoonlijk kaartje toevoegen" }}
    </label>
  </div>
</div>

<!-- Modal will be dynamically inserted into body -->
<div id="gifting-modal-template" style="display: none;">
  <div id="gifting-modal" class="gifting-modal-overlay" style="display: none;">
  <div class="gifting-modal-backdrop"></div>
  <div class="gifting-modal-container">
    <div class="gifting-modal-content">
      <!-- Header -->
      <div class="gifting-modal-header">
        <div class="gifting-header-content">
          <div class="gifting-icon-wrapper">
            <svg class="gifting-header-icon" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20 12v6a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-6"/>
              <path d="M2 7h20l-2 5H4l-2-5z"/>
              <path d="M12 22V7"/>
              <path d="M8 7V5a4 4 0 0 1 8 0v2"/>
            </svg>
          </div>
          <div class="gifting-header-text">
            <h2 id="gifting-modal-title" class="gifting-title">{{ block.settings.modal_title | default: "Voeg een persoonlijk bericht toe" }}</h2>
            <p class="gifting-subtitle">{{ block.settings.modal_subtitle | default: "Maak het extra speciaal met een persoonlijk bericht" }}</p>
          </div>
        </div>
        <button class="gifting-modal-close" aria-label="Sluit popup">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>



      <!-- Content -->
      <div class="gifting-modal-body">
        <!-- Product Selection -->
        <div id="gifting-product-section" class="gifting-section">
          <div class="gifting-carousel-container">
            <button class="gifting-carousel-btn gifting-carousel-prev" id="carousel-prev" style="display: none;">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="15,18 9,12 15,6"></polyline>
              </svg>
            </button>
            <div class="gifting-carousel-wrapper">
              <div id="gifting-product-list" class="gifting-product-carousel"></div>
            </div>
            <button class="gifting-carousel-btn gifting-carousel-next" id="carousel-next" style="display: none;">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9,18 15,12 9,6"></polyline>
              </svg>
            </button>
          </div>
          <div class="gifting-carousel-dots" id="carousel-dots" style="display: none;"></div>
        </div>
        
        <!-- Variant Selection -->
        <div id="gifting-variant-section" class="gifting-section" style="display: none;">
          <div class="gifting-section-header">
            <h3 class="gifting-section-title">Kies een optie</h3>
            <p class="gifting-section-description">Selecteer jouw voorkeur</p>
          </div>
          <div id="gifting-variant-options" class="gifting-variant-grid"></div>
        </div>
        
        <!-- Message Section -->
        <div id="gifting-message-section" class="gifting-section" style="display: none;">
          <div class="gifting-section-header">
            <h3 class="gifting-section-title">Jouw persoonlijke bericht</h3>
            <p class="gifting-section-description">Voeg een liefdevolle boodschap toe</p>
          </div>
          <div class="gifting-message-container">
            <div class="gifting-textarea-wrapper">
              <textarea 
                id="gifting-message" 
                name="properties[Message]" 
                placeholder="Bijv: Gefeliciteerd met je verjaardag! Ik hoop dat dit je dag nog specialer maakt..."
                rows="4"
              ></textarea>
              <div class="gifting-textarea-border"></div>
            </div>
            <div class="gifting-message-footer">
              <div class="gifting-message-tips">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"/>
                  <path d="M12 16v-4"/>
                  <path d="M12 8h.01"/>
                </svg>
              </div>
              <p id="gifting-char-count" class="gifting-char-count">0/0</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Footer -->
      <div class="gifting-modal-footer">
        <div class="gifting-footer-combined">
          {% if block.settings.enable_quantity_selector %}
          <div class="gifting-quantity-section">
            <label for="gifting-quantity" class="gifting-quantity-label">{{ block.settings.quantity_label | default: "Aantal kaartjes:" }}</label>
            <div class="gifting-quantity-controls">
              <button type="button" id="quantity-decrease" class="gifting-quantity-btn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="5" y1="12" x2="19" y2="12"></line>
                </svg>
              </button>
              <input type="number" id="gifting-quantity" class="gifting-quantity-input" value="1" min="1" max="{{ block.settings.max_quantity | default: 99 }}">
              <button type="button" id="quantity-increase" class="gifting-quantity-btn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="12" y1="5" x2="12" y2="19"></line>
                  <line x1="5" y1="12" x2="19" y2="12"></line>
                </svg>
              </button>
            </div>
          </div>
          {% endif %}
          <div class="gifting-modal-actions">
            <input type="hidden" id="selected-variant-id" name="id">
            <input type="hidden" id="selected-product-title" name="properties[Gifting Product]">
            <button type="button" id="gifting-add-to-cart" class="gifting-btn gifting-btn-primary" disabled>
              <svg class="gifting-btn-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M3 3h2l.4 2M7 13h10l4-8H5.4m.6 8v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-6M7 13l-1.5-8"/>
              </svg>
              <span class="gifting-btn-text">{{ block.settings.select_product_text | default: "Selecteer product" }}</span>
              <div class="gifting-btn-loading" style="display: none;">
                <div class="gifting-spinner"></div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  </div>
</div>

<style>
/* CSS Custom Properties scoped to this block instance */
#gifting-app-container-{{ block.id }} {
  --gifting-primary-color: #2563eb;
  --gifting-secondary-color: #1d4ed8;
  --gifting-accent-color: #059669;
  --gifting-background-color: #ffffff;
  --gifting-text-color: #1e293b;
  --gifting-border-radius: 12px;
  --gifting-modal-width: {{ block.settings.modal_width | default: 85 }}%;
  --gifting-modal-height: {{ block.settings.modal_height | default: 90 }}vh;
  --gifting-product-image-height: {{ block.settings.product_image_height | default: 120 }}px;
  --gifting-font-family: 'Inter', sans-serif;
  --gifting-font-size: 16px;
  --gifting-font-weight: 500;
}

/* Base styles for elements within this block */
#gifting-app-container-{{ block.id }} * {
  box-sizing: border-box;
}
#gifting-app-container-{{ block.id }} .gifting-trigger-btn {
  font-family: var(--gifting-font-family);
}
#gifting-app-container-{{ block.id }} .gifting-modal-content {
  font-family: var(--gifting-font-family);
  font-size: var(--gifting-font-size);
  font-weight: var(--gifting-font-weight);
  color: var(--gifting-text-color);
  background-color: var(--gifting-background-color);
}
#gifting-app-container-{{ block.id }} .gifting-modal-header {
  border-bottom: 1px solid #e2e8f0;
}
#gifting-app-container-{{ block.id }} .gifting-title {
  color: var(--gifting-text-color);
}
#gifting-app-container-{{ block.id }} .gifting-subtitle {
  color: var(--gifting-text-color);
  opacity: 0.7;
}

/* Reset and base styles */
.gifting-app-container * {
  box-sizing: border-box;
}

/* Checkbox Container */
.gifting-checkbox-container {
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 10px 0;
  position: relative;
}

.gifting-checkbox-input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.gifting-checkbox-label {
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 16px;
  color: var(--gifting-text-color);
  font-weight: 500;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.gifting-checkbox-box {
  width: 22px;
  height: 22px;
  border: 2px solid #cbd5e1;
  border-radius: 6px;
  margin-right: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease-in-out;
  background-color: transparent;
  flex-shrink: 0;
}

.gifting-checkbox-icon {
  width: 14px;
  height: 14px;
  stroke: white;
  stroke-width: 2.5;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  opacity: 0;
  transform: scale(0.5) rotate(-45deg);
  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

.gifting-checkbox-input:checked + .gifting-checkbox-label .gifting-checkbox-box {
  background-color: var(--gifting-primary-color);
  border-color: var(--gifting-primary-color);
}

.gifting-checkbox-input:checked + .gifting-checkbox-label .gifting-checkbox-icon {
  opacity: 1;
  transform: scale(1) rotate(0deg);
}

.gifting-checkbox-container:hover .gifting-checkbox-box {
  border-color: var(--gifting-primary-color);
}

.gifting-checkbox-input:focus-visible + .gifting-checkbox-label .gifting-checkbox-box {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Modal Overlay */
.gifting-modal-overlay {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  z-index: 999999 !important;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  animation: giftingFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  margin: 0 !important;
  transform: none !important;
}

.gifting-modal-backdrop {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100% !important;
  height: 100% !important;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(8px);
  animation: giftingBackdropFadeIn 0.3s ease;
}

.gifting-modal-container {
  position: relative;
  width: var(--gifting-modal-width);
  max-width: 900px;
  max-height: 95vh;
  animation: giftingSlideUp 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.gifting-modal-content {
  background: var(--gifting-background-color);
  border-radius: 24px;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: var(--gifting-modal-height);
  max-height: var(--gifting-modal-height);
  font-family: var(--gifting-font-family);
  font-size: var(--gifting-font-size);
  color: var(--gifting-text-color);
}

/* Header */
.gifting-modal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px 24px 16px 24px;
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  border-bottom: 1px solid #e2e8f0;
  position: relative;
}

.gifting-header-content {
  display: flex;
  align-items: center;
  gap: 16px;
}

.gifting-icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
  border-radius: 12px;
  border: 2px solid rgba(37, 99, 235, 0.1);
}

.gifting-header-icon {
  color: #2563eb;
}

.gifting-header-text {
  flex: 1;
}

.gifting-title {
  margin: 0;
  font-size: 20px;
  font-weight: 700;
  color: #1e293b;
  line-height: 1.2;
}

.gifting-subtitle {
  margin: 4px 0 0 0;
  font-size: 14px;
  color: #64748b;
  line-height: 1.4;
}

.gifting-modal-close {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  color: #64748b;
}

.gifting-modal-close:hover {
  background: #f8fafc;
  border-color: #cbd5e1;
  color: #374151;
  transform: scale(1.05);
}



/* Modal Body */
.gifting-modal-body {
  flex: 1;
  padding: 20px;
  overflow-y: auto;
  min-height: 0;
}

.gifting-section {
  margin-bottom: 40px;
}

.gifting-section:last-child {
  margin-bottom: 0;
}

.gifting-section-header {
  margin-bottom: 32px;
  text-align: center;
}

.gifting-section-title {
  margin: 0 0 8px 0;
  font-size: 20px;
  font-weight: 700;
  color: #1e293b;
}

.gifting-section-description {
  margin: 0;
  font-size: 15px;
  color: #64748b;
  line-height: 1.5;
}

/* Product Carousel */
.gifting-carousel-container {
  position: relative;
  display: flex;
  align-items: center;
  gap: 16px;
}

.gifting-carousel-wrapper {
  flex: 1;
  overflow: hidden;
  border-radius: 16px;
}

.gifting-product-carousel {
  display: flex;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  gap: 24px;
}

.gifting-carousel-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  background: white;
  border: 2px solid #e2e8f0;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
  color: #64748b;
  flex-shrink: 0;
}

.gifting-carousel-btn:hover {
  background: #f8fafc;
  border-color: #2563eb;
  color: #2563eb;
  transform: scale(1.05);
}

.gifting-carousel-btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  transform: none;
}

.gifting-carousel-dots {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 24px;
}

.gifting-carousel-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #e2e8f0;
  cursor: pointer;
  transition: all 0.3s ease;
}

.gifting-carousel-dot.active {
  background: #2563eb;
  transform: scale(1.2);
}

/* Grid fallback when carousel is disabled */
.gifting-product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 24px;
}

.gifting-product-grid .gifting-product-item {
  width: auto;
}

.gifting-product-item {
  background: white;
  border: 2px solid #f1f5f9;
  border-radius: 12px;
  padding: 16px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  min-height: 240px;
  flex-shrink: 0;
  width: 220px;
}

.gifting-product-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(37, 99, 235, 0.05) 0%, rgba(59, 130, 246, 0.05) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gifting-product-item:hover {
  border-color: #dbeafe;
  transform: translateY(-4px);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
}

.gifting-product-item:hover::before {
  opacity: 1;
}

.gifting-product-item.selected {
  border-color: #2563eb;
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(37, 99, 235, 0.25);
}

.gifting-product-item.selected::before {
  opacity: 1;
}

.gifting-product-item img {
  width: 100%;
  height: var(--gifting-product-image-height);
  object-fit: cover;
  border-radius: 8px;
  margin-bottom: 12px;
}

.gifting-product-title {
  font-size: 16px;
  font-weight: 600;
  color: #1e293b;
  margin: 0 0 8px 0;
  line-height: 1.3;
}

.gifting-product-price {
  font-size: 14px;
  font-weight: 600;
  color: #059669;
  margin: 0 0 6px 0;
}

.gifting-product-description {
  font-size: 14px;
  color: #64748b;
  margin: 0;
  line-height: 1.4;
}

.gifting-product-item.selected .gifting-product-title {
  color: #1e40af;
}

/* Variant Grid */
.gifting-variant-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 20px;
}

.gifting-variant-option {
  padding: 20px 24px;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  cursor: pointer;
  background: white;
  transition: all 0.3s ease;
  text-align: center;
  font-weight: 600;
  color: #374151;
  min-height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.gifting-variant-option:hover {
  border-color: #cbd5e1;
  background: #f8fafc;
  transform: translateY(-2px);
}

.gifting-variant-option.selected {
  border-color: #2563eb;
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
  color: #1e40af;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.2);
}

/* Message Section */
.gifting-message-container {
  max-width: 100%;
}

.gifting-textarea-wrapper {
  position: relative;
  margin-bottom: 16px;
}

#gifting-message {
  width: 100%;
  min-height: 120px;
  padding: 16px;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  font-family: inherit;
  font-size: 16px;
  line-height: 1.6;
  color: #1e293b;
  background: white;
  resize: vertical;
  transition: all 0.3s ease;
  outline: none;
}

#gifting-message:focus {
  border-color: #2563eb;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

#gifting-message::placeholder {
  color: #9ca3af;
}

.gifting-textarea-border {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid transparent;
  border-radius: 16px;
  pointer-events: none;
  background: linear-gradient(135deg, #2563eb, #1d4ed8);
  background-clip: padding-box;
  opacity: 0;
  transition: opacity 0.3s ease;
}

#gifting-message:focus + .gifting-textarea-border {
  opacity: 1;
}

.gifting-message-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
}

.gifting-message-tips {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  color: #6b7280;
}

.gifting-message-tips svg {
  color: #3b82f6;
}

.gifting-char-count {
  font-size: 14px;
  font-weight: 500;
  color: #6b7280;
  margin: 0;
}

/* Footer */
.gifting-modal-footer {
  background: #f8fafc;
  border-top: 1px solid #e2e8f0;
  flex-shrink: 0;
}

.gifting-footer-combined {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
  padding: 16px 24px;
  background: #f8fafc;
  border-bottom: 1px solid #e2e8f0;
}

.gifting-modal-actions {
  display: flex !important;
  gap: 16px;
  justify-content: flex-end;
  padding: 0;
  visibility: visible !important;
  flex-shrink: 0;
}

.gifting-btn {
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 14px 28px;
  border-radius: 12px;
  font-family: inherit;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: none;
  min-height: 48px;
  visibility: visible !important;
}

.gifting-btn-secondary {
  background: white !important;
  color: #6b7280 !important;
  border: 2px solid #e5e7eb !important;
  flex: 0 0 auto;
}

.gifting-btn-secondary:hover {
  background: #f9fafb;
  border-color: #d1d5db;
  color: #374151;
  transform: translateY(-1px);
}

.gifting-btn-primary {
  background: linear-gradient(135deg, var(--gifting-primary-color) 0%, var(--gifting-secondary-color) 100%);
  color: white;
  border: 2px solid transparent;
  flex: 1;
  box-shadow: 0 4px 14px rgba(37, 99, 235, 0.25);
}

.gifting-btn-primary:hover:not(:disabled) {
  background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(37, 99, 235, 0.35);
}

.gifting-btn-primary:disabled {
  background: #e5e7eb !important;
  color: #9ca3af !important;
  cursor: not-allowed !important;
  transform: none !important;
  box-shadow: none !important;
  opacity: 0.7 !important;
}

.gifting-btn-icon {
  transition: transform 0.3s ease;
}

.gifting-btn-primary:hover:not(:disabled) .gifting-btn-icon {
  transform: scale(1.1);
}

.gifting-btn-loading {
  display: flex;
  align-items: center;
  justify-content: center;
}

.gifting-spinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: giftingSpin 1s linear infinite;
}

.gifting-footer-note {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  font-size: 14px;
  color: #059669;
  font-weight: 500;
  padding: 0 32px 24px 32px;
}

.gifting-footer-note svg {
  color: #10b981;
}

/* Quantity Section */
.gifting-quantity-section {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 0;
  background: transparent;
  border: none;
  flex-shrink: 0;
}

.gifting-quantity-label {
  font-size: 16px;
  font-weight: 600;
  color: #1e293b;
  margin: 0;
}

.gifting-quantity-controls {
  display: flex;
  align-items: center;
  gap: 2px;
  background: white;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  overflow: hidden;
  transition: border-color 0.3s ease;
  flex-shrink: 0;
}

.gifting-quantity-controls:focus-within {
  border-color: #2563eb;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

.gifting-quantity-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background: transparent;
  border: none;
  color: #64748b;
  cursor: pointer;
  transition: all 0.2s ease;
}

.gifting-quantity-btn:hover {
  background: #e2e8f0;
  color: #2563eb;
}

.gifting-quantity-btn:active {
  background: #cbd5e1;
  transform: scale(0.95);
}

.gifting-quantity-btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  background: transparent;
}

.gifting-quantity-input {
  width: 60px;
  height: 40px;
  text-align: center;
  border: none;
  background: transparent;
  font-size: 16px;
  font-weight: 600;
  color: #1e293b;
  outline: none;
  -moz-appearance: textfield;
}

.gifting-quantity-input::-webkit-outer-spin-button,
.gifting-quantity-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Animations */
@keyframes giftingFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes giftingBackdropFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes giftingSlideUp {
  from { 
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }
  to { 
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes giftingSpin {
  to { transform: rotate(360deg); }
}

/* Responsive Design */
@media (max-width: 768px) {
  .gifting-modal-overlay {
    padding: 10px !important;
  }
  
  .gifting-modal-container {
    max-width: 95vw;
    margin: 0 auto;
  }
  
  .gifting-modal-content {
    height: 90vh;
  }

  .gifting-modal-header,
  .gifting-modal-body,
  .gifting-modal-footer {
    padding-left: 20px;
    padding-right: 20px;
  }

  .gifting-title {
    font-size: 20px;
  }

  .gifting-subtitle {
    font-size: 14px;
  }

  .gifting-product-grid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
  }
  
  .gifting-carousel-container {
    gap: 12px;
  }
  
  .gifting-carousel-btn {
    width: 40px;
    height: 40px;
  }
  
  .gifting-product-item {
    width: 180px;
  }

  .gifting-variant-grid {
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 16px;
  }

  .gifting-footer-combined {
    flex-direction: column;
    gap: 16px;
    padding: 16px 24px;
  }
  
  .gifting-quantity-section {
    flex-direction: column;
    gap: 12px;
    justify-content: center;
    width: 100%;
  }
  
  .gifting-quantity-label {
    text-align: center;
  }
  
  .gifting-quantity-controls {
    max-width: 200px;
    margin: 0 auto;
  }
  
  .gifting-quantity-btn {
    width: 44px;
    height: 44px;
  }
  
  .gifting-quantity-input {
    width: 70px;
    height: 44px;
    font-size: 18px;
  }

  .gifting-modal-actions {
    padding: 0;
    justify-content: center;
    width: 100%;
  }

  .gifting-btn {
    width: 100%;
    max-width: 280px;
  }

  .gifting-message-footer {
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
  }


}

@media (max-width: 480px) {
  .gifting-modal-overlay {
    padding: 10px !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    z-index: 999999 !important;
  }

  .gifting-modal-content {
    border-radius: 16px;
    height: 90vh;
  }

  .gifting-header-content {
    gap: 12px;
  }

  .gifting-icon-wrapper {
    width: 48px;
    height: 48px;
  }

  .gifting-product-grid {
    grid-template-columns: 1fr;
  }
  
  .gifting-carousel-container {
    gap: 8px;
  }
  
  .gifting-carousel-btn {
    width: 36px;
    height: 36px;
  }
  
  .gifting-product-item {
    width: 160px;
    min-height: 200px;
  }

  .gifting-variant-grid {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }

  #gifting-message {
    min-height: 120px;
    padding: 20px;
  }
  
  .gifting-footer-combined {
    flex-direction: column;
    gap: 12px;
    padding: 12px 16px;
  }
  
  .gifting-quantity-section {
    flex-direction: column;
    gap: 8px;
    justify-content: center;
    width: 100%;
  }
  
  .gifting-quantity-label {
    font-size: 15px;
    text-align: center;
  }
  
  .gifting-quantity-controls {
    max-width: 180px;
    margin: 0 auto;
  }
  
  .gifting-quantity-btn {
    width: 40px;
    height: 40px;
  }
  
  .gifting-quantity-input {
    width: 60px;
    height: 40px;
    font-size: 16px;
  }
  
  .gifting-modal-actions {
    padding: 0;
    justify-content: center;
    width: 100%;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .gifting-modal-content {
    background: #1f2937;
    color: #f9fafb;
  }

  .gifting-modal-header {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    border-bottom-color: #4b5563;
  }

  .gifting-title {
    color: #f9fafb;
  }

  .gifting-subtitle {
    color: #d1d5db;
  }

  .gifting-modal-close {
    background: #374151;
    border-color: #4b5563;
    color: #d1d5db;
  }

  .gifting-modal-close:hover {
    background: #4b5563;
    color: #f3f4f6;
  }

  .gifting-product-item {
    background: #374151;
    border-color: #4b5563;
  }

  .gifting-product-title {
    color: #f9fafb;
  }

  #gifting-message {
    background: #374151;
    border-color: #4b5563;
    color: #f9fafb;
  }

  .gifting-modal-footer {
    background: #374151;
    border-top-color: #4b5563;
  }
}
</style>

{% schema %}
{
  "name": "Product Personalisatie",
  "target": "section",
  "stylesheet": "styles.css",
  "javascript": "script.js",
  "settings": [
    {
      "type": "header",
      "content": "Algemene Instellingen"
    },
    {
      "type": "text",
      "id": "checkbox_label",
      "label": "Checkbox Label",
      "default": "Ja, ik wil een persoonlijk kaartje toevoegen",
      "info": "Tekst die naast de checkbox wordt getoond."
    },
    {
      "type": "header",
      "content": "Modal Venster"
    },
    {
      "type": "text",
      "id": "modal_title",
      "label": "Modal titel",
      "default": "Voeg een persoonlijk bericht toe"
    },
    {
      "type": "text",
      "id": "modal_subtitle",
      "label": "Modal ondertitel",
      "default": "Maak het extra speciaal met een persoonlijk bericht"
    },
    {
      "type": "range",
      "id": "modal_width",
      "label": "Modal breedte (%)",
      "min": 60,
      "max": 95,
      "step": 5,
      "default": 85,
      "info": "Percentage van scherm breedte"
    },
    {
      "type": "range",
      "id": "modal_height",
      "label": "Modal hoogte (%)",
      "min": 70,
      "max": 95,
      "step": 5,
      "default": 90,
      "info": "Percentage van scherm hoogte"
    },
    {
      "type": "text",
      "id": "add_button_text",
      "label": "Toevoegen knop tekst",
      "default": "Toevoegen"
    },
    {
      "type": "text",
      "id": "adding_to_cart_text",
      "label": "Tekst tijdens toevoegen...",
      "default": "Toevoegen..."
    },
    {
      "type": "text",
      "id": "select_product_text",
      "label": "Selecteer product tekst",
      "default": "Selecteer product"
    },
    {
      "type": "text",
      "id": "select_variant_text",
      "label": "Selecteer variant tekst",
      "default": "Selecteer variant"
    },
    {
      "type": "text",
      "id": "quantity_label",
      "label": "Aantal label",
      "default": "Aantal kaartjes:"
    },
    {
      "type": "header",
      "content": "Product Display"
    },
    {
      "type": "checkbox",
      "id": "show_product_prices",
      "label": "Toon product prijzen",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_descriptions",
      "label": "Toon product beschrijvingen",
      "default": false
    },
    {
      "type": "range",
      "id": "product_image_height",
      "label": "Product afbeelding hoogte (px)",
      "min": 80,
      "max": 200,
      "step": 10,
      "default": 120
    },
    {
      "type": "header",
      "content": "Carousel Instellingen"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel",
      "label": "Carousel inschakelen",
      "default": true,
      "info": "Toon producten in een carousel in plaats van een grid"
    },
    {
      "type": "range",
      "id": "visible_products",
      "label": "Aantal zichtbare producten (desktop)",
      "min": 1,
      "max": 4,
      "step": 1,
      "default": 2,
      "info": "Hoeveel producten tegelijk zichtbaar zijn in de carousel op desktop"
    },
    {
      "type": "range",
      "id": "visible_products_mobile",
      "label": "Aantal zichtbare producten (mobile)",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2,
      "info": "Hoeveel producten tegelijk zichtbaar zijn op mobiele apparaten"
    },
    {
      "type": "checkbox",
      "id": "show_carousel_navigation",
      "label": "Toon navigatie (pijlen en dots)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "auto_scroll",
      "label": "Automatisch scrollen",
      "default": false
    },
    {
      "type": "range",
      "id": "auto_scroll_speed",
      "label": "Auto scroll snelheid (seconden)",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 5,
      "info": "Alleen actief wanneer automatisch scrollen is ingeschakeld"
    },
    {
      "type": "header",
      "content": "Styling"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Primaire kleur",
      "default": "#2563eb"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Secundaire kleur",
      "default": "#1d4ed8"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border radius (px)",
      "min": 4,
      "max": 24,
      "step": 2,
      "default": 12
    },
    {
      "type": "header",
      "content": "Geavanceerde Opties"
    },
    {
      "type": "checkbox",
      "id": "enable_quantity_selector",
      "label": "Aantal selector inschakelen",
      "default": true
    },
    {
      "type": "range",
      "id": "max_quantity",
      "label": "Maximum aantal",
      "min": 10,
      "max": 100,
      "step": 10,
      "default": 100
    },
    {
      "type": "checkbox",
      "id": "enable_easy_closing",
      "label": "Sluiten via backdrop of escape toets",
      "default": true
    }
  ]
}
{% endschema %}

<script>
class GiftingModal {
  constructor(blockId, options = {}) {
    this.blockId = blockId;
    this.options = options;
    this.isOpen = false;
    this.products = [];
    this.selectedProduct = null;
    this.selectedVariant = null;
    this.currentProductIndex = 0;
    this.modal = document.getElementById('gifting-modal-template').firstElementChild.cloneNode(true);

    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.handleBackdropClick = this.handleBackdropClick.bind(this);
  }

  initElements() {
    this.modalContent = this.modal.querySelector('.gifting-modal-content');
    this.closeBtn = this.modal.querySelector('.gifting-modal-close');
    this.backdrop = this.modal.querySelector('.gifting-modal-backdrop');
    this.productList = this.modal.querySelector('#gifting-product-list');
    this.variantSection = this.modal.querySelector('#gifting-variant-section');
    this.variantOptions = this.modal.querySelector('#gifting-variant-options');
    this.messageSection = this.modal.querySelector('#gifting-message-section');
    this.messageTextarea = this.modal.querySelector('#gifting-message');
    this.charCount = this.modal.querySelector('#gifting-char-count');
    this.addToCartBtn = this.modal.querySelector('#gifting-add-to-cart');
    this.addToCartBtnText = this.addToCartBtn.querySelector('.gifting-btn-text');
    this.addToCartBtnIcon = this.addToCartBtn.querySelector('.gifting-btn-icon');
    this.addToCartBtnSpinner = this.addToCartBtn.querySelector('.gifting-btn-loading');
    this.selectedVariantIdInput = this.modal.querySelector('#selected-variant-id');
    this.selectedProductTitleInput = this.modal.querySelector('#selected-product-title');
    this.quantityInput = this.modal.querySelector('#gifting-quantity');
    this.quantityIncrease = this.modal.querySelector('#quantity-increase');
    this.quantityDecrease = this.modal.querySelector('#quantity-decrease');
    this.carouselPrev = this.modal.querySelector('#carousel-prev');
    this.carouselNext = this.modal.querySelector('#carousel-next');
    this.carouselDots = this.modal.querySelector('#carousel-dots');
  }

  initEventListeners() {
    this.closeBtn.addEventListener('click', () => this.close());
    this.addToCartBtn.addEventListener('click', () => this.addToCart());

    if (this.options.closeOnBackdropClick) {
      this.backdrop.addEventListener('click', this.handleBackdropClick);
    }
    if (this.options.enableQuantitySelector) {
      this.quantityIncrease.addEventListener('click', () => this.updateQuantity(1));
      this.quantityDecrease.addEventListener('click', () => this.updateQuantity(-1));
    }
    if (this.messageTextarea) {
        this.messageTextarea.addEventListener('input', () => this.updateCharCount());
    }

    this.carouselPrev.addEventListener('click', () => this.navigateCarousel(-1));
    this.carouselNext.addEventListener('click', () => this.navigateCarousel(1));
  }
  
  open() {
    if (this.isOpen) return;
    this.modal.style.display = 'flex';
    this.isOpen = true;
    document.body.style.overflow = 'hidden';
    if (this.options.closeOnEscape) {
      document.addEventListener('keydown', this.handleKeyDown);
    }
  }

  close() {
    if (!this.isOpen) return;
    this.modal.style.display = 'none';
    this.isOpen = false;
    document.body.style.overflow = '';
    document.removeEventListener('keydown', this.handleKeyDown);
    document.dispatchEvent(new CustomEvent('giftingModalClosed', { detail: { blockId: this.blockId }}));
  }

  init() {
    this.initElements();
    this.initEventListeners();
    this.fetchProducts();
    document.body.appendChild(this.modal);
    document.dispatchEvent(new CustomEvent('giftingModalReady', { detail: { instance: this, blockId: this.blockId }}));
  }
  
  async fetchProducts() {
    // This is a placeholder for fetching products.
    // In a real scenario, this would make a request to a Shopify endpoint.
    // For now, we'll use the handles passed from the block settings.
    this.products = this.options.productHandles;
    this.renderProducts();
    this.initCarousel();
  }

  renderProducts() {
      this.productList.innerHTML = '';
      this.products.forEach((productHandle, index) => {
          // In a real app, you would fetch product details here.
          // For now, we'll create placeholder items.
          const productElement = document.createElement('div');
          productElement.className = 'gifting-product-item';
          productElement.dataset.index = index;
          productElement.innerHTML = `
              <img src="//via.placeholder.com/150" alt="${productHandle}">
              <h4>${productHandle.replace(/-/g, ' ')}</h4>
          `;
          productElement.addEventListener('click', () => this.selectProduct(index));
          this.productList.appendChild(productElement);
      });
  }

  selectProduct(index) {
      this.selectedProduct = this.products[index];
      // Highlight selected product
      this.productList.querySelectorAll('.gifting-product-item').forEach((el, i) => {
          el.classList.toggle('selected', i === index);
      });
      // In a real app, you'd show variants and message boxes here.
      this.updateAddToCartButtonState();
  }

  initCarousel() {
      if (this.products.length <= 1) {
          this.carouselPrev.style.display = 'none';
          this.carouselNext.style.display = 'none';
      }
  }

  navigateCarousel(direction) {
      // Basic carousel logic placeholder
      let newIndex = this.currentProductIndex + direction;
      if (newIndex < 0) newIndex = this.products.length - 1;
      if (newIndex >= this.products.length) newIndex = 0;
      this.currentProductIndex = newIndex;
      const offset = -this.currentProductIndex * (100 / this.products.length);
      this.productList.style.transform = `translateX(${offset}%)`;
  }
  
  updateQuantity(change) {
      let currentValue = parseInt(this.quantityInput.value, 10);
      let newValue = currentValue + change;
      if (newValue >= 1 && newValue <= this.options.maxQuantity) {
          this.quantityInput.value = newValue;
      }
  }
  
  updateCharCount() {
      const maxLength = this.selectedProduct?.maxCharacters || 200; // Example value
      const currentLength = this.messageTextarea.value.length;
      this.charCount.textContent = `${currentLength}/${maxLength}`;
  }

  updateAddToCartButtonState() {
      if (this.selectedProduct) {
          this.addToCartBtn.disabled = false;
          this.addToCartBtnText.textContent = this.options.addToCartText;
      } else {
          this.addToCartBtn.disabled = true;
          this.addToCartBtnText.textContent = this.options.selectProductText;
      }
  }

  async addToCart() {
    if (!this.selectedProduct) return;
    this.addToCartBtn.disabled = true;
    this.addToCartBtnSpinner.style.display = 'block';
    this.addToCartBtnIcon.style.display = 'none';
    this.addToCartBtnText.textContent = this.options.addingToCartText;
    
    // Simulate adding to cart
    setTimeout(() => {
        this.addToCartBtnSpinner.style.display = 'none';
        this.addToCartBtnIcon.style.display = 'block';
        this.addToCartBtnText.textContent = "Added!";
        console.log(`Added ${this.selectedProduct} to cart.`);
        setTimeout(() => this.close(), 1000);
    }, 1500);
  }

  handleKeyDown(event) {
      if (event.key === 'Escape') {
          this.close();
      }
  }

  handleBackdropClick(event) {
      if (event.target === this.backdrop) {
          this.close();
      }
  }
  
  reset() {
      this.selectedProduct = null;
      this.selectedVariant = null;
      if (this.messageTextarea) this.messageTextarea.value = '';
      if (this.quantityInput) this.quantityInput.value = '1';
      this.productList.querySelectorAll('.selected').forEach(el => el.classList.remove('selected'));
      this.updateAddToCartButtonState();
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const container = document.getElementById('gifting-app-container-{{ block.id }}');
  if (!container) return;

  const checkbox = document.getElementById('personalization-checkbox-{{ block.id }}');
  
  const modalInstance = new GiftingModal('{{ block.id }}', {
      shopUrl: '{{ shop.permanent_domain }}',
      productHandles: ['gepersonaliseerd-kaartje', 'luxe-geschenkverpakking', 'speciale-boodschap'],
      closeOnBackdropClick: {{ block.settings.close_on_backdrop_click }},
      closeOnEscape: {{ block.settings.close_on_escape }},
      enableQuantitySelector: {{ block.settings.enable_quantity_selector }},
      maxQuantity: {{ block.settings.max_quantity | default: 99 }},
      selectProductText: '{{ block.settings.select_product_text | escape }}',
      addToCartText: '{{ block.settings.add_button_text | escape }}',
      addingToCartText: '{{ block.settings.adding_to_cart_text | escape }}'
  });
  
  modalInstance.init();

  if (checkbox) {
    checkbox.addEventListener('change', (event) => {
      if (event.target.checked) {
        modalInstance.open();
      } else {
        modalInstance.close();
        modalInstance.reset();
      }
    });

    document.addEventListener('giftingModalClosed', (event) => {
      if (event.detail.blockId === '{{ block.id }}' && checkbox.checked) {
        checkbox.checked = false;
        modalInstance.reset();
      }
    });
  }
});
</script>

